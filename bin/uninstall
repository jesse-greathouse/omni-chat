#!/usr/bin/env perl
use strict;
use warnings;
use File::Path qw(remove_tree);

$ENV{OPAMYES}  = '1';
$ENV{OPAMROOT} = $ENV{OPAMROOT} || '';

delete @ENV{qw(
  OPAMSWITCH OPAMREPOSITORY OCAMLLIB OCAMLPATH CAML_LD_LIBRARY_PATH CAML_LD_LIBRARY_PATH__F
  OCAML_TOPLEVEL_PATH FLEXLINKFLAGS FLEXDLL_CHAIN MAKE MAKEFLAGS CC CL
)};

sub have_cmd { my ($t)=@_; return system("command -v $t >/dev/null 2>&1")==0 }
sub capture_safe {
  my (@cmd)=@_; open my $fh, "-|", @cmd or return ''; local $/; my $o=<$fh>; close $fh; return defined($o)?$o:'';
}
sub run_quiet_ok { my (@cmd)=@_; system(@cmd); return (($?>>8)==0) }
sub rm_tree {
  my ($dir)=@_; return unless defined $dir && length $dir && -d $dir;
  print "Removing: $dir\n";
  my $err; remove_tree($dir, { error => \$err });
  if ($err && @$err) { for my $e (@$err) { my ($f,$msg)=%$e; next unless $f; print "  - $f : $msg\n"; } }
}

# Remove normalized pkg dir + symlinks
sub remove_pkg_root {
  my $omni_pkgs = "$ENV{HOME}/.local/omni-irc/pkg";
  if (-d $omni_pkgs) { rm_tree($omni_pkgs) } else { print "omni-irc prebuilt packages not found: $omni_pkgs\n" }
}

# Remove macOS app bundles (both user + system Applications)
sub remove_app_bundles {
  return unless $^O eq 'darwin';
  my @candidates = (
    "$ENV{HOME}/Applications/Omni IRC Client.app",
    "/Applications/Omni IRC Client.app",
  );
  my $removed = 0;
  for my $p (@candidates) {
    next unless -d $p;
    print "Removing application bundle: $p\n";
    system('rm','-rf',$p);
    if (-d $p) { print "  (warning) could not remove $p — ensure it’s not running.\n"; }
    else { $removed = 1; }
  }
  print $removed ? "Application bundle removed.\n" : "Application bundle not found in Applications.\n";
}

# OPAM wipe (user scope)
sub wipe_opam {
  my $opam_present = have_cmd('opam');
  my $root = '';
  if ($opam_present) {
    my $r = capture_safe('opam','var','root','--global'); $r =~ s/^\s+|\s+$//g; $root = $r if $r;
  }
  $root ||= $ENV{OPAMROOT} || "$ENV{HOME}/.opam";
  $ENV{OPAMROOT} = $root;

  print "Uninstalling OPAM data for this user...\n";
  print "Detected OPAM root: $root\n";

  if ($opam_present) {
    my $list = capture_safe('opam','switch','list','--short');
    my @sw = grep { length } split(/\r?\n/,$list);
    if (@sw) {
      for my $s (@sw) {
        print "Removing switch: $s\n";
        run_quiet_ok('opam','switch','remove','--yes',$s) or print "  (warning) failed to remove $s\n";
      }
    } else { print "No switches found under this root.\n" }
  } else {
    print "opam not found on PATH. Skipping switch removal.\n";
  }

  if (-d $root) { rm_tree($root) } else { print "OPAM root not found: $root\n" }

  my $xdg_cache = $ENV{XDG_CACHE_HOME} && length $ENV{XDG_CACHE_HOME} ? $ENV{XDG_CACHE_HOME} : "$ENV{HOME}/.cache";
  my $opam_cache  = "$xdg_cache/opam";
  my $omni_cache  = "$xdg_cache/omni-irc/src";

  if (-d $opam_cache) { rm_tree($opam_cache) } else { print "OPAM cache not found: $opam_cache\n" }
  if (-d $omni_cache) { rm_tree($omni_cache) } else { print "omni-irc cache not found: $omni_cache\n" }
}

# ---- run ----
wipe_opam();
remove_pkg_root();
remove_app_bundles();

print "\nHard reset complete.\n";
print "Open a NEW shell to ensure a clean environment.\n";
print "(If you installed opam via Homebrew/apt and want to remove the program itself,\n";
print " do that with your package manager; this script only wipes user data.)\n";
